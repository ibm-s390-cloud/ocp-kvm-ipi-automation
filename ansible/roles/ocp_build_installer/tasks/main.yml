---

- name: build openshift-install binary
  block:
    - name: create temporary checkout directory
      ansible.builtin.tempfile:
        state: directory
        suffix: ocpinst
      register: temp_dir

    - name: download OpenShift release.txt file
      ansible.builtin.get_url:
        url: '{{ openshift_release_url }}'
        dest: '{{ temp_dir.path }}/release.txt'
        mode: '0440'
        timeout: 120

    - name: slurp OpenShift release.txt file
      ansible.builtin.slurp:
        src: '{{ temp_dir.path }}/release.txt'
      register: ocp_release_txt

    - name: determine version number of OpenShift release about to be installed
      ansible.builtin.set_fact:
        ocp_release_ver: "{{ ocp_release_txt['content'] | b64decode | trim | regex_search('^Name:[\\s]*([\\d.]*)', '\\1', multiline=true) | parse_version }}"

    - name: set openshift-install release version
      ansible.builtin.set_fact:
        openshift_installer_version: 'release-{{ ocp_release_ver.major }}.{{ ocp_release_ver.minor }}'
      when:
        - ocp_release_ver is defined
        - ocp_release_ver.major is defined
        - ocp_release_ver.minor is defined

    - name: fetch openshift-install source code
      ansible.builtin.git:
        repo: 'https://github.com/openshift/installer.git'
        dest: '{{ temp_dir.path }}/installer'
        version: '{{ openshift_installer_version }}'
        single_branch: true
        depth: 1

    - name: patch openshift-install source code
      ansible.builtin.include_tasks: '{{ role_path }}/tasks/patch_installer.yml'

    - name: remove unnecessary terraform providers from the source code
      ansible.builtin.file:
        path: '{{ temp_dir.path }}/installer/terraform/providers/{{ item }}'
        state: absent
      loop:
        - alicloud
        - aws
        - azureprivatedns
        - azurerm
        - azurestack
        - google
        - ibm
        - ironic
        - nutanix
        - openstack
        - ovirt
        - vsphere
        - vsphereprivate

    - name: build openshift-install binary
      ansible.builtin.command:
        cmd: 'hack/build.sh'
        chdir: '{{ temp_dir.path }}/installer'
      environment:
        TAGS: 'libvirt'
        CC: 'gcc'
        GOPATH: '{{ temp_dir.path }}/go'
        PATH: '/usr/local/go/bin:{{ temp_dir.path }}/go/bin:{{ ansible_env.PATH }}'
        DEFAULT_ARCH: '{{ architecture_alias }}'
        BUILD_VERSION: '{{ openshift_installer_version }}'
      async: 600
      poll: 10

    - name: remove existing openshift-install binary from /usr/local/bin
      ansible.builtin.file:
        path: /usr/local/bin/openshift-install
        state: absent

    - name: copy openshift-install binary to /usr/local/bin
      ansible.builtin.copy:
        src: '{{ temp_dir.path }}/installer/bin/openshift-install'
        dest: /usr/local/bin/openshift-install
        owner: root
        group: root
        mode: '0755'
        remote_src: true
  always:
    - name: delete temporary checkout directory
      ansible.builtin.file:
        path: '{{ temp_dir.path }}'
        state: absent
      when: temp_dir.path is defined
